# NOTE: always C-b before any key bindings below
# except for when using vim-tmux-navigator

# Reloading configuration file using r
unbind r
bind r source-file ~/.tmux.conf \; display "tmux configuration reloaded!"

# Start window numbering at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Re-map n to open new window
unbind c
bind n new-window

# Enable/disable keyboard input to all panes inside a window
#
# e.g. If enabled in Window1, Pane1 and Pane2 will receive keyboard input
#
# ----------------------------
# | Session                  |
# |---------------------------
# | Window1        | Window2 |
# |---------------------------
# | Pane1  | Pane2 | Pane1   |
# |--------------------------|
#
# Ctrl-a synchronize-panes
unbind C-a
bind C-a setw synchronize-panes
# Ctrl-p synchronize-panes off
unbind C-p
bind C-p setw synchronize-panes off
# --------------------------------

# Set scrollback buffer
set -g history-limit 30000

# Split panes
unbind '"'
unbind %
# Horizontal split using | character and set size to 40 cells
bind | split-window -h
# Vertical split pane using - character and set size to 50 cells
bind - split-window -v

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Workaround to hanging https://github.com/christoomey/vim-tmux-navigator/issues/299
is_vim="ps -a | grep -qE '#{s|/dev/||:pane_tty}''.*(n?)vim'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize pane by 10 cells each time. Need to prefix before resizing
bind h resize-pane -L 10
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -R 10

# Enable keyboard copy and paste
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux display-message 'Buffer updated...'"
bind Escape copy-mode

# Use vim keybindings in copy mode
# ctrl-b then [: enter copy mode
# copy using normal vi keybindings
# ctrl-b then ]: paste
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'V' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind p paste-buffer

# Enable mouse copy and paste

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically
# be available in clibboard
#
# macOS only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# status line from https://github.com/jzelinskie/dotfiles/blob/master/.tmux.conf#L49
set -g status-style fg=white
set -g status-style bg=black
set -g message-style fg=white
set -g message-style bg=black
# set -g status-right '#h '
set -g window-status-format " #I.#W "
set -g window-status-current-format "#[fg=green,bg=default][#I:#W]#[default]"

# Date and time
set -g status-right "#[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"
